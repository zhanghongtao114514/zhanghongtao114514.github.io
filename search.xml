<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用某网站api爬取二刺猿图片</title>
      <link href="/2021/09/21/shi-yong-mou-wang-zhan-api-pa-qu-er-ci-yuan-tu-pian/"/>
      <url>/2021/09/21/shi-yong-mou-wang-zhan-api-pa-qu-er-ci-yuan-tu-pian/</url>
      
        <content type="html"><![CDATA[<img src="https://p.pstatp.com/origin/pgc-image/57ace173fe824932af025d517e22f264" style="zoom:50%;"><h2 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h2><p>某一天一个群友在群中发了一串神秘网址<a href="http://iw233.cn/api/Random.php，说是可以随机生成一些好康的图片，我出于好奇点了进去，发现能“随机”一些二刺猿图片，正好学了一点点爬虫相关的知识，于是便想要爬取亿点点二刺猿图片练练手。" target="_blank" rel="noopener">http://iw233.cn/api/Random.php，说是可以随机生成一些好康的图片，我出于好奇点了进去，发现能“随机”一些二刺猿图片，正好学了一点点爬虫相关的知识，于是便想要爬取亿点点二刺猿图片练练手。</a></p><h2 id="激动人心的代码部分"><a href="#激动人心的代码部分" class="headerlink" title="激动人心的代码部分"></a>激动人心的代码部分</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> os<span class="token keyword">from</span> threading <span class="token keyword">import</span> Threadreq_url <span class="token operator">=</span> <span class="token string">'http://iw233.cn/api/Random.php'</span>root <span class="token operator">=</span> <span class="token string">"D://images//"</span>num_per<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"输入需要的图片数:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>threads<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"输入同时下载图片数:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>now_img<span class="token operator">=</span><span class="token number">0</span>mis_img<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"-----当前设置为:下载"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>num_per<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"张图片-----\n-----线程数为:"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>threads<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"条-----\n-----默认下载路径为:D://ImagesDownload"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> now_img<span class="token punctuation">,</span>mis_img    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>int<span class="token punctuation">(</span>num_per<span class="token operator">/</span>threads<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        r <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req_url<span class="token punctuation">)</span>        path <span class="token operator">=</span> root <span class="token operator">+</span> r<span class="token punctuation">.</span>url<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            f <span class="token operator">=</span> open<span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>r<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>            now_img<span class="token operator">=</span>now_img<span class="token operator">+</span><span class="token number">1</span>            <span class="token keyword">if</span> now_img<span class="token operator">%</span><span class="token number">10</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"*****当前已保存图片"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>now_img<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"张*****\n*****重复图片"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>mis_img<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"张*****"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            mis_img<span class="token operator">+=</span><span class="token number">1</span>ts <span class="token operator">=</span> <span class="token punctuation">[</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>get<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>threads<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> t <span class="token keyword">in</span> ts<span class="token punctuation">:</span>    t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> t <span class="token keyword">in</span> ts<span class="token punctuation">:</span>    t<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="原理在这"><a href="#原理在这" class="headerlink" title="原理在这"></a>原理在这</h2><p>1.多线程访问网站，加快爬取速度</p><p>2.使用文件名对比以免下载到重复图片</p><p>3.保存各个线程的图片</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>差不多每分钟能下载600m左右的图片，但是等多次爬取之后发现，图库有限，一共几万张，10GB左右，并没有很大的图库，但是质量还是非常不错，推荐大家试试看。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
            <tag> 爬取图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2021/09/20/wo-de-di-yi-pian-bo-ke/"/>
      <url>/2021/09/20/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p><img src="https://p.pstatp.com/origin/pgc-image/892e5d819dc14878b937b1ca24aff07e" alt></p><h2 id="开启博客时代！！"><a href="#开启博客时代！！" class="headerlink" title="开启博客时代！！"></a>开启博客时代！！</h2><p>这还是我第一次写博客，为啥会想到想要写博客，这源于我想对自己学习的大部分东西进行进行一定的整理，不至于在学完大部分东西之后毫无学习过的痕迹，希望在之后能够坚持写博客的习惯。</p><h2 id="搭建博客时候踩到的一些坑！"><a href="#搭建博客时候踩到的一些坑！" class="headerlink" title="搭建博客时候踩到的一些坑！"></a>搭建博客时候踩到的一些坑！</h2><p>我是参考网络上的Hexo+GItHub来搭建的静态网页。</p><p>遇到的第一个问题，在使用<code>hexo d</code>命令却无法上传到GitHub，在进行一番查阅以后，发现错误居然是node和hexo的版本不太匹配，在把Node的版本降至12以后成功上传</p><p>遇到的第二个问题，第一次创建完GitHub的项目之后，将创建好的网页上传上去，发现还是初始网页，在查阅多方资料后，发现创建的GitHub项目的前缀要和自己的GitHub名字一致才能够正常的访问，在一番折腾以后终于能够正常的访问了！！</p><h2 id="关于博客更新的内容"><a href="#关于博客更新的内容" class="headerlink" title="关于博客更新的内容"></a>关于博客更新的内容</h2><p>首先，我觉得应该会更新一些深度学习的模型或者实例，通俗易懂的解析各个模型的原理（毕竟真正理解透一个模型的时间还是比较长的），在以后复习或者重新拿出来看的时候也比较方便。</p><p>其次，由于我在准备参加数学建模竞赛，对于其中的各种模型也会进行学习和整理，分析其中的原理或者贴一些代码及其用法之类的，以便后期使用。</p><p>再次之便是算法了，可能刷一些板子进行整理，刷刷一些算法题整理一下，时刻温习一下不至于忘光。</p><p>最后可能更新一点生活中的琐事，over！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
