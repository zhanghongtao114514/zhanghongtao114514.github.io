<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>正则表达式</title>
      <link href="/2021/10/06/zheng-ze-biao-da-shi/"/>
      <url>/2021/10/06/zheng-ze-biao-da-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式Cheatsheet（查字典了属于是）"><a href="#正则表达式Cheatsheet（查字典了属于是）" class="headerlink" title="正则表达式Cheatsheet（查字典了属于是）"></a>正则表达式Cheatsheet（查字典了属于是）</h1><p><img src="https://mmbiz.qpic.cn/mmbiz_png/eySK9BEnBaljn7FJjWJ7touicBBKhNCCUGm8GbtbecQx6GJicfWQ3SpvU4wKG4dty0pJxFTibnsF2LlibhvqQhgPPQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt></p><p>引用自<a href="https://mp.weixin.qq.com/s/CQ1vjRiG5H_aKnci1VFWsg" target="_blank" rel="noopener">爬虫要讲武德，你却用正则 - 一篇文章搞定正则表达式！ (qq.com)</a></p><h2 id="正则表达式的书写步骤"><a href="#正则表达式的书写步骤" class="headerlink" title="正则表达式的书写步骤"></a>正则表达式的书写步骤</h2><h3 id="一-分清表达式有几种不同状态"><a href="#一-分清表达式有几种不同状态" class="headerlink" title="一.分清表达式有几种不同状态"></a>一.分清表达式有几种不同状态</h3><p>以电话号码为例<code>0571-88776655</code>和<code>0571-88776655-9527</code></p><p>因为座机可能含有分机所以有两种不同的状态都是符合要求的，中间使用<code>|</code>字符隔开，表示符合一种即可。</p><h3 id="二-分析表达式中含有的字符类别"><a href="#二-分析表达式中含有的字符类别" class="headerlink" title="二.分析表达式中含有的字符类别"></a>二.分析表达式中含有的字符类别</h3><p>类似于电话号码这种纯数字类型，我们使用<code>\d</code>来进行对数字的提取。因此便为<code>\d-\d-\d</code>。</p><h3 id="三-子状态怎么重复"><a href="#三-子状态怎么重复" class="headerlink" title="三.子状态怎么重复"></a>三.子状态怎么重复</h3><p>简而言之就是有几个数字，对于电话号码自然是<code>\d{3,4}-\d{7,8}-\d{3,4}</code>或者是<code>\d{3,4}-\d{7,8}</code></p><p>所以最终的模式应该写成<code>\d{3,4}-\d{7,8}-\d{3,4}|\d{3,4}-\d{7,8}</code>最为合适。</p><h2 id="实例：爬取天气网站"><a href="#实例：爬取天气网站" class="headerlink" title="实例：爬取天气网站"></a>实例：爬取天气网站</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> csv<span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">import</span> timeheaders<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.82 Safari/537.36'</span><span class="token punctuation">}</span>url<span class="token operator">=</span><span class="token string">'http://lishi.tianqi.com/'</span>  <span class="token comment" spellcheck="true">#设定url</span>response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>response<span class="token operator">=</span>response<span class="token punctuation">.</span>text<span class="token comment" spellcheck="true">#城市名示例</span><span class="token comment" spellcheck="true">#&lt;a target="_blank" title="苏右旗历史天气" href="/suyouqi/index.html">苏右旗&lt;/a></span><span class="token comment" spellcheck="true">#&lt;a target="_blank" title="阿城历史天气" href="acheng/index.html">阿城&lt;/a></span>reg <span class="token operator">=</span> r<span class="token string">'href=".*/index.html">(.*)&lt;'</span>  <span class="token comment" spellcheck="true">#找到所有的城市名</span>timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>w<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span>response<span class="token punctuation">)</span>reg <span class="token operator">=</span> r<span class="token string">'href="(.*)/index.html">'</span>  <span class="token comment" spellcheck="true">#找到对应的网址</span>timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>W<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span>response<span class="token punctuation">)</span>W<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> W<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>W<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> W<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">del</span> <span class="token punctuation">(</span>W<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>x1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2018'</span><span class="token punctuation">,</span> <span class="token string">'2019'</span><span class="token punctuation">,</span> <span class="token string">'2020'</span><span class="token punctuation">,</span> <span class="token string">'2021'</span><span class="token punctuation">]</span>x2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'01'</span><span class="token punctuation">,</span> <span class="token string">'02'</span><span class="token punctuation">,</span> <span class="token string">'03'</span><span class="token punctuation">,</span> <span class="token string">'04'</span><span class="token punctuation">,</span> <span class="token string">'05'</span><span class="token punctuation">,</span> <span class="token string">'06'</span><span class="token punctuation">,</span> <span class="token string">'07'</span><span class="token punctuation">,</span> <span class="token string">'08'</span><span class="token punctuation">,</span> <span class="token string">'09'</span><span class="token punctuation">,</span> <span class="token string">'10'</span><span class="token punctuation">,</span> <span class="token string">'11'</span><span class="token punctuation">,</span> <span class="token string">'12'</span><span class="token punctuation">]</span>R <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'城市/区县名称'</span><span class="token punctuation">,</span> <span class="token string">'拼音'</span><span class="token punctuation">,</span> <span class="token string">'年'</span><span class="token punctuation">,</span> <span class="token string">'月'</span><span class="token punctuation">,</span> <span class="token string">'平均高温'</span><span class="token punctuation">,</span> <span class="token string">'平均低温'</span><span class="token punctuation">,</span> <span class="token string">'极端高温'</span><span class="token punctuation">,</span> <span class="token string">'极端低温'</span><span class="token punctuation">,</span> <span class="token string">'平均空气质量指数'</span><span class="token punctuation">,</span> <span class="token string">'空气质量最好'</span><span class="token punctuation">,</span> <span class="token string">'空气质量最差'</span><span class="token punctuation">,</span> <span class="token string">'晴天次数'</span><span class="token punctuation">,</span> <span class="token string">'多云次数'</span><span class="token punctuation">,</span>          <span class="token string">'阴天次数'</span><span class="token punctuation">,</span> <span class="token string">'小雨次数'</span><span class="token punctuation">,</span> <span class="token string">'恶劣天气次数'</span><span class="token punctuation">]</span>R<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 默认设置了10个城市天气情况</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> x1<span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> x2<span class="token punctuation">:</span>            result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            response <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            url <span class="token operator">=</span> <span class="token string">'http://lishi.tianqi.com/'</span> <span class="token operator">+</span> W<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> j <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token string">'.html'</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 如果网络不好可能第一次请求超时而报错，这里设置停留时间再次访问</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>                response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                response <span class="token operator">=</span> response<span class="token punctuation">.</span>text            <span class="token keyword">except</span><span class="token punctuation">:</span>                response <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'class="tian_twoa">(.*)℃&lt;/div>&lt;div class="tian_twob">平均高温'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result1 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                result1 <span class="token operator">=</span> str<span class="token punctuation">(</span>result1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> int<span class="token punctuation">(</span>result1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    result1 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                result1 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'&lt;/div>&lt;/div>&lt;div>&lt;div class="tian_twoa">(.*)℃&lt;/div>&lt;div class="tian_twob">平均低温'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result2 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                result2 <span class="token operator">=</span> str<span class="token punctuation">(</span>result2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> int<span class="token punctuation">(</span>result1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    result2 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                result2 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'class="tian_twoa">(.*)℃&lt;/div>&lt;div class="tian_twob">极端高温'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result3 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                result3 <span class="token operator">=</span> str<span class="token punctuation">(</span>result3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> int<span class="token punctuation">(</span>result3<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    result3 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                result3 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'class="tian_twoa">(.*)℃&lt;/div>&lt;div class="tian_twob">极端低温'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result4 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                result4 <span class="token operator">=</span> str<span class="token punctuation">(</span>result4<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> int<span class="token punctuation">(</span>result3<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    result4 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                result4 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'class="tian_twoa">(.*)&lt;/div>&lt;div class="tian_twob">平均空气质量指数'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result5 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                result5 <span class="token operator">=</span> str<span class="token punctuation">(</span>result5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> int<span class="token punctuation">(</span>result5<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    result5 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                result5 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'class="tian_twoa">(.*)&lt;/div>&lt;div class="tian_twob">空气最好'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result6 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                result6 <span class="token operator">=</span> str<span class="token punctuation">(</span>result6<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> int<span class="token punctuation">(</span>result5<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    result6 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                result6 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'class="tian_twoa">(.*)&lt;/div>&lt;div class="tian_twob">空气最差'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result7 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                result7 <span class="token operator">=</span> str<span class="token punctuation">(</span>result7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> int<span class="token punctuation">(</span>result5<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    result7 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                result7 <span class="token operator">=</span> <span class="token string">''</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                reg <span class="token operator">=</span> r<span class="token string">'class="th200">(.*)&lt;/div>'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result8 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                aa <span class="token operator">=</span> str<span class="token punctuation">(</span>result8<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">"星期"</span><span class="token punctuation">)</span>                reg <span class="token operator">=</span> r<span class="token string">'class="th140">(.*)&lt;/div>'</span>                timere <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>reg<span class="token punctuation">)</span>                result9 <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>timere<span class="token punctuation">,</span> response<span class="token punctuation">)</span>                a <span class="token operator">=</span> str<span class="token punctuation">(</span>result9<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">"晴"</span><span class="token punctuation">)</span> <span class="token operator">/</span> aa                b <span class="token operator">=</span> str<span class="token punctuation">(</span>result9<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">"多云"</span><span class="token punctuation">)</span> <span class="token operator">/</span> aa                c <span class="token operator">=</span> str<span class="token punctuation">(</span>result9<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">"阴"</span><span class="token punctuation">)</span> <span class="token operator">/</span> aa                d <span class="token operator">=</span> str<span class="token punctuation">(</span>result9<span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">"小雨"</span><span class="token punctuation">)</span> <span class="token operator">/</span> aa                e <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> a <span class="token operator">-</span> b <span class="token operator">-</span> c <span class="token operator">-</span> d                <span class="token keyword">if</span> e <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>                    s <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c <span class="token operator">+</span> d                    a <span class="token operator">=</span> a <span class="token operator">/</span> s                    b <span class="token operator">=</span> b <span class="token operator">/</span> s                    c <span class="token operator">=</span> c <span class="token operator">/</span> s                    d <span class="token operator">=</span> d <span class="token operator">/</span> s                    e <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                a <span class="token operator">=</span> <span class="token string">''</span>                b <span class="token operator">=</span> <span class="token string">''</span>                c <span class="token operator">=</span> <span class="token string">''</span>                d <span class="token operator">=</span> <span class="token string">''</span>                e <span class="token operator">=</span> <span class="token string">''</span>            result <span class="token operator">=</span> <span class="token punctuation">[</span>w<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> W<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">,</span> result1<span class="token punctuation">,</span> result2<span class="token punctuation">,</span> result3<span class="token punctuation">,</span> result4<span class="token punctuation">,</span> result5<span class="token punctuation">,</span> result6<span class="token punctuation">,</span> result7<span class="token punctuation">,</span> str<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>                      str<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">]</span>            R<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 将数据输出至csv文件</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'tianqi.csv'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'gbk'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>    writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>fp<span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>writerows<span class="token punctuation">(</span>R<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写入数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> re正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于脑电仪上位机的一些思路</title>
      <link href="/2021/10/04/guan-yu-nao-dian-yi-shang-wei-ji-de-yi-xie-si-lu/"/>
      <url>/2021/10/04/guan-yu-nao-dian-yi-shang-wei-ji-de-yi-xie-si-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="思路来源"><a href="#思路来源" class="headerlink" title="思路来源"></a>思路来源</h2><p>在上学期导师让我们学习完《信号处理》这本书以后，这学期便考虑让我们跟随研究生进行脑电仪的开发，鉴于我们知识储备暂时不足，我们便只参与软件方面的开发，查阅了一些资料后，我了解到这叫上位机，接下来的一段时间，对于这个虚拟仪器的开发应该会成为我探究的主要方面。</p><h2 id="初步思路"><a href="#初步思路" class="headerlink" title="初步思路"></a>初步思路</h2><p>既然是上位机，那肯定得有一个可视化的界面，哪有人会在控制台里操作呢？在可视化这个方面，参考了多处文件以后，我决定使用python的<code>PyQT5</code>这个库进行界面的可视化，QTDesigner可以方便的像MSF一样绘制自己所需要的图形界面，使用外部工具PyUIC转化成.py代码即可运行，非常的方便奥。</p><p>随后是通信方面的问题，作为上位机，要和下位机通过usb口通信，由于尚未接触到实体下位机，我参考了几篇文章之后，决定使用<code>PySerial</code>模块来实现串口之间的通信。</p><blockquote><p>pyserial模块封装了对串口的访问。</p><p>在支持的平台上有统一的接口。<br>通过python属性访问串口设置。<br>支持不同的字节大小、停止位、校验位和流控设置。<br>可以有或者没有接收超时。<br>类似文件的API，例如read和write，也支持readline等。<br>支持二进制传输，没有null消除，没有cr-lf转换。支持二进制传输，没有null消除，没有cr-lf转换。</p></blockquote><p>至于示波器图形的显示，参考了<a href="[(10条消息">开发工业上位机 用pyqt5_用PyQT5开发上位机软件界面（3）</a> 开发工业上位机 用pyqt5_用PyQT5开发上位机软件界面（3）_小诗璇的博客-CSDN博客](<a href="https://blog.csdn.net/weixin_42251888/article/details/113033390" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42251888/article/details/113033390</a>))</p><p>使用<code>pyqtgraph</code>库来实现对波形图的实时显示</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">create_graph</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    graph <span class="token operator">=</span> pg<span class="token punctuation">.</span>PlotWidget<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 实例化PlotWidget()</span>    self<span class="token punctuation">.</span>gridLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>graph<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 在gridLayout中添加graph</span>    graph<span class="token punctuation">.</span>setBackground<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 设置背景颜色</span>    graph<span class="token punctuation">.</span>setLabel<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'left'</span><span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">'random'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 设置Y轴的名称</span>    graph<span class="token punctuation">.</span>setYRange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># Y轴范围</span>    graph<span class="token punctuation">.</span>setXRange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># X轴范围</span>    graph<span class="token punctuation">.</span>showGrid<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 显示网格</span>    graph<span class="token punctuation">.</span>setLimits<span class="token punctuation">(</span>xMin<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> xMax<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> yMin<span class="token operator">=</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span> yMax<span class="token operator">=</span><span class="token number">6000</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 设置缩放范围</span>    self<span class="token punctuation">.</span>curve <span class="token operator">=</span> graph<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>pen<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 添加一天曲线</span><span class="token keyword">def</span> <span class="token function">draw_curve</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    history_length <span class="token operator">=</span> <span class="token number">200</span>    data <span class="token operator">=</span> random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">global</span> i    <span class="token keyword">if</span> i <span class="token operator">&lt;</span> history_length<span class="token punctuation">:</span>        self<span class="token punctuation">.</span>curve_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        i <span class="token operator">+=</span> <span class="token number">1</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>curve_data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>curve_data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>curve<span class="token punctuation">.</span>setData<span class="token punctuation">(</span>self<span class="token punctuation">.</span>curve_data<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">time_click</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    timer <span class="token operator">=</span> pg<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QTimer<span class="token punctuation">(</span>self<span class="token punctuation">)</span>    timer<span class="token punctuation">.</span>timeout<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>draw_curve<span class="token punctuation">)</span>    timer<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大致思路暂时是这样，具体设计等国庆之后接触完下位机再看看。</p>]]></content>
      
      
      <categories>
          
          <category> 导师研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脑电仪 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用某网站api爬取二刺猿图片</title>
      <link href="/2021/09/21/shi-yong-mou-wang-zhan-api-pa-qu-er-ci-yuan-tu-pian/"/>
      <url>/2021/09/21/shi-yong-mou-wang-zhan-api-pa-qu-er-ci-yuan-tu-pian/</url>
      
        <content type="html"><![CDATA[<img src="https://p.pstatp.com/origin/pgc-image/57ace173fe824932af025d517e22f264" style="zoom:50%;"><h2 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h2><p>某一天一个群友在群中发了一串神秘网址<a href="http://iw233.cn/api/Random.php" target="_blank" rel="noopener"><code>http://iw233.cn/api/Random.php</code></a>，说是可以随机生成一些好康的图片，我出于好奇点了进去，发现能“随机”一些二刺猿图片，正好学了一点点爬虫相关的知识，于是便想要爬取亿点点二刺猿图片练练手。</p><h2 id="激动人心的代码部分"><a href="#激动人心的代码部分" class="headerlink" title="激动人心的代码部分"></a>激动人心的代码部分</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> os<span class="token keyword">from</span> threading <span class="token keyword">import</span> Threadreq_url <span class="token operator">=</span> <span class="token string">'http://iw233.cn/api/Random.php'</span>root <span class="token operator">=</span> <span class="token string">"D://images//"</span>num_per<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"输入需要的图片数:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>threads<span class="token operator">=</span>int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"输入同时下载图片数:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>now_img<span class="token operator">=</span><span class="token number">0</span>mis_img<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"-----当前设置为:下载"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>num_per<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"张图片-----\n-----线程数为:"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>threads<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"条-----\n-----默认下载路径为:D://ImagesDownload"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> now_img<span class="token punctuation">,</span>mis_img    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>int<span class="token punctuation">(</span>num_per<span class="token operator">/</span>threads<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        r <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req_url<span class="token punctuation">)</span>        path <span class="token operator">=</span> root <span class="token operator">+</span> r<span class="token punctuation">.</span>url<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            f <span class="token operator">=</span> open<span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>r<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>            now_img<span class="token operator">=</span>now_img<span class="token operator">+</span><span class="token number">1</span>            <span class="token keyword">if</span> now_img<span class="token operator">%</span><span class="token number">10</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"*****当前已保存图片"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>now_img<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"张*****\n*****重复图片"</span><span class="token operator">+</span>str<span class="token punctuation">(</span>mis_img<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"张*****"</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            mis_img<span class="token operator">+=</span><span class="token number">1</span>ts <span class="token operator">=</span> <span class="token punctuation">[</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>get<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>threads<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> t <span class="token keyword">in</span> ts<span class="token punctuation">:</span>    t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> t <span class="token keyword">in</span> ts<span class="token punctuation">:</span>    t<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="原理在这"><a href="#原理在这" class="headerlink" title="原理在这"></a>原理在这</h2><p>1.多线程访问网站，加快爬取速度</p><p>2.使用文件名对比以免下载到重复图片</p><p>3.保存各个线程的图片</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>差不多每分钟能下载600m左右的图片，但是等多次爬取之后发现，图库有限，一共几万张，10GB左右，并没有很大的图库，但是质量还是非常不错，推荐大家试试看。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
            <tag> 爬取图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2021/09/20/wo-de-di-yi-pian-bo-ke/"/>
      <url>/2021/09/20/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p><img src="https://p.pstatp.com/origin/pgc-image/892e5d819dc14878b937b1ca24aff07e" alt></p><h2 id="开启博客时代！！"><a href="#开启博客时代！！" class="headerlink" title="开启博客时代！！"></a>开启博客时代！！</h2><p>这还是我第一次写博客，为啥会想到想要写博客，这源于我想对自己学习的大部分东西进行进行一定的整理，不至于在学完大部分东西之后毫无学习过的痕迹，希望在之后能够坚持写博客的习惯。</p><h2 id="搭建博客时候踩到的一些坑！"><a href="#搭建博客时候踩到的一些坑！" class="headerlink" title="搭建博客时候踩到的一些坑！"></a>搭建博客时候踩到的一些坑！</h2><p>我是参考网络上的Hexo+GItHub来搭建的静态网页。</p><p>遇到的第一个问题，在使用<code>hexo d</code>命令却无法上传到GitHub，在进行一番查阅以后，发现错误居然是node和hexo的版本不太匹配，在把Node的版本降至12以后成功上传</p><p>遇到的第二个问题，第一次创建完GitHub的项目之后，将创建好的网页上传上去，发现还是初始网页，在查阅多方资料后，发现创建的GitHub项目的前缀要和自己的GitHub名字一致才能够正常的访问，在一番折腾以后终于能够正常的访问了！！</p><h2 id="关于博客更新的内容"><a href="#关于博客更新的内容" class="headerlink" title="关于博客更新的内容"></a>关于博客更新的内容</h2><p>首先，我觉得应该会更新一些深度学习的模型或者实例，通俗易懂的解析各个模型的原理（毕竟真正理解透一个模型的时间还是比较长的），在以后复习或者重新拿出来看的时候也比较方便。</p><p>其次，由于我在准备参加数学建模竞赛，对于其中的各种模型也会进行学习和整理，分析其中的原理或者贴一些代码及其用法之类的，以便后期使用。</p><p>再次之便是算法了，可能刷一些板子进行整理，刷刷一些算法题整理一下，时刻温习一下不至于忘光。</p><p>最后可能更新一点生活中的琐事，over！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
